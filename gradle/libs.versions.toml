[versions]
#plugins
kotlin = "2.0.21"
springBoot = "3.4.5"
springDependencyManagement = "1.1.6"
openApiGenerator = "7.11.0"
flywayDb = "11.3.1"
ktfmt = "0.22.0"
detekt = "1.23.8"
dependencyCheck = "12.1.1"

#libraries
kotlinJackson = "2.18.1"
kotlinReflect = "2.0.0"
kotlinJunit5 = "2.0.10-RC"
swaggerCore = "2.2.25"
validationApi = "2.0.1.Final"
servletApi = "4.0.1"
h2Database = "2.3.232"
junitLauncher = "1.11.3"
postgresDriver = "42.7.4"
springWeb = "6.2.5"
googleOauth2 = "1.23.0"
nimbusJoseJwt = "9.47"
jackson = "2.17.1"
jacksonDatabindNullable = "0.2.6"
jakartaAnnotation = "2.1.1"
jupiter = "5.11.4"
apacheCsv = '1.10.0'
apacheTika = '3.1.0'
icu4J = '71.1'
springSecurity = '6.4.4'

[plugins]
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinSpring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlinJpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
springDependencyManagement = { id = "io.spring.dependency-management", version.ref = "springDependencyManagement" }
openApiGenerator = { id = "org.openapi.generator", version.ref = "openApiGenerator" }
ktfmt = { id = "com.ncorti.ktfmt.gradle", version.ref = "ktfmt"}
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt"}
dependencyCheck = { id = "org.owasp.dependencycheck", version.ref = "dependencyCheck"}

[libraries]
springBootStarterJpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "springBoot" }
springBootStarterWeb = { module = "org.springframework.boot:spring-boot-starter-web",  version.ref = "springBoot" }
springBootStarterOauth2 = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server",  version.ref = "springBoot" }
springBootStarterOauth2Client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client",  version.ref = "springBoot" }
springBootStarterSecurity = { module = "org.springframework.boot:spring-boot-starter-security",  version.ref = "springBoot" }
springDevTools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "springBoot" }
springWeb = { module = "org.springframework:spring-web", version.ref = "springWeb" }
springBootTest = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBoot" }
springSecurityTest = { module = "org.springframework.security:spring-security-test", version.ref = "springSecurity" }
kotlinJackson = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "kotlinJackson" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlinReflect" }
swaggerCore = { module = "io.swagger.core.v3:swagger-core", version.ref = "swaggerCore" }
validationApi = { module = "javax.validation:validation-api", version.ref = "validationApi" }
servletApi = { module = "javax.servlet:javax.servlet-api", version.ref = "servletApi" }
h2Database = { module = "com.h2database:h2", version.ref = "h2Database" }
kotlinJunit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlinJunit5" }
junitLauncher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junitLauncher" }
postgresDriver = { module = "org.postgresql:postgresql", version.ref = "postgresDriver" }
googleOauth2 = { module = "com.google.auth:google-auth-library-oauth2-http", version.ref = "googleOauth2" }
nimbusJoseJwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbusJoseJwt" }
jacksonDatabind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref ="jackson" }
jacksonDatabindNullable = { module = "org.openapitools:jackson-databind-nullable", version.ref = "jacksonDatabindNullable" }
jacksonDatatype = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref ="jackson" }
jakartaAnnotation = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakartaAnnotation" }
jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "jupiter" }
flywayCore = { module = "org.flywaydb:flyway-core", version.ref = "flywayDb" }
flywayPostgres = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flywayDb" }
apacheCsv = { module = "org.apache.commons:commons-csv", version.ref = "apacheCsv" }
apacheTika = { module = "org.apache.tika:tika-core", version.ref = "apacheTika" }
icu4J = { module = "com.ibm.icu:icu4j", version.ref = "icu4J" }
