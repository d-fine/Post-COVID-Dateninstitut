---
openapi: 3.0.3
info:
  title: EuroDaT REST API
  description: OpenAPI specification of EuroDaT's available control plane API
  contact:
    name: EuroDaT support
    url: https://www.eurodat.org
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0-SNAPSHOT
servers:
  - url: https://app.int.eurodat.org
paths:
  /api/v1/apps:
    post:
      tags:
        - Controller Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
  /api/v1/apps/{appId}/messages:
    get:
      tags:
        - Messaging Resource
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
        - name: excludeUntil
          in: query
          schema:
            format: int64
            type: integer
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
  /api/v1/apps/{transactionId}:
    post:
      tags:
        - Controller Resource
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkflowRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowStartResponse"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
    delete:
      tags:
        - Controller Resource
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
  /api/v1/apps/{workflowName}:
    get:
      tags:
        - Controller Resource
      parameters:
        - name: workflowName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowGetResponse"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
  /api/v1/clients:
    post:
      tags:
        - Client Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientRegistrationForm"
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
    patch:
      tags:
        - Client Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientCertificateValues"
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
  /api/v1/clients/clientmappings:
    get:
      tags:
        - Client Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClientSelectorMapping"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
  /api/v1/clients/clientselector:
    get:
      tags:
        - Client Resource
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
  /api/v1/clients/clientselector/{clientId}:
    get:
      tags:
        - Client Resource
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
  /api/v1/clients/{clientId}:
    delete:
      tags:
        - Client Resource
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ClientDeleteResponse"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
  /api/v1/messages:
    post:
      tags:
        - Messaging Resource
      requestBody:
        description: Message request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MessageRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
        "401":
          description: Unauthorized
        "400":
          description: Invalid selectors
      security:
        - custom-bearer: []
  /api/v1/policies:
    post:
      tags:
        - Policy Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PolicyInput"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
  /api/v1/policies/{participantId}/{principalId}:
    get:
      tags:
        - Policy Resource
      parameters:
        - name: participantId
          in: path
          required: true
          schema:
            type: string
        - name: principalId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PolicyEntity"
        "401":
          description: Not Authorized
        "403":
          description: Not Allowed
      security:
        - SecurityScheme: []
components:
  schemas:
    AppRequest:
      required:
        - appId
        - consumer
        - provider
      type: object
      properties:
        appId:
          type: string
        consumer:
          type: array
          items:
            type: string
        provider:
          type: array
          items:
            type: string
    ClientCertificateValues:
      required:
        - name
        - certificate
      type: object
      properties:
        name:
          type: string
        certificate:
          type: string
    ClientDeleteResponse:
      type: object
      properties:
        keycloakClientDelete:
          type: boolean
        clientMapperDelete:
          type: boolean
    ClientRegistrationForm:
      required:
        - name
        - certificate
        - clientSelector
      type: object
      properties:
        name:
          type: string
        certificate:
          type: string
        createPublicClient:
          type: boolean
        clientSelector:
          type: string
    ClientSelectorMapping:
      required:
        - clientId
        - clientSelector
      type: object
      properties:
        clientId:
          type: string
        clientSelector:
          type: string
    LocalDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50
    Message:
      required:
        - appId
        - transactionId
        - workflowId
        - label
        - selector
      type: object
      properties:
        correlationId:
          format: int64
          type: integer
          nullable: true
        appId:
          type: string
        transactionId:
          type: string
        workflowId:
          type: string
        label:
          type: string
        selector:
          type: string
        createdAt:
          type: string
          allOf:
            - $ref: "#/components/schemas/ZonedDateTime"
          nullable: true
    MessageRequest:
      required:
        - message
        - selectors
      type: object
      properties:
        message:
          type: string
        selectors:
          type: array
          items:
            type: string
    PolicyEntity:
      required:
        - participantId
        - principalId
        - validFrom
        - tableNaming
        - appName
        - workflowName
      type: object
      properties:
        participantId:
          type: string
        principalId:
          type: string
        validFrom:
          $ref: "#/components/schemas/ZonedDateTime"
        validTo:
          type: string
          allOf:
            - $ref: "#/components/schemas/ZonedDateTime"
          nullable: true
        tableNaming:
          type: string
        appName:
          type: string
        workflowName:
          type: string
    PolicyInput:
      required:
        - participantId
        - principalId
        - validFrom
        - tableNaming
        - appName
        - workflowName
      type: object
      properties:
        participantId:
          type: string
        principalId:
          type: string
        validFrom:
          $ref: "#/components/schemas/ZonedDateTime"
        validTo:
          type: string
          allOf:
            - $ref: "#/components/schemas/ZonedDateTime"
          nullable: true
        tableNaming:
          type: string
        appName:
          type: string
        workflowName:
          type: string
    Transaction:
      required:
        - id
        - appId
        - clientId
        - consumer
        - provider
      type: object
      properties:
        id:
          type: string
        appId:
          type: string
        clientId:
          type: string
        consumer:
          type: array
          items:
            type: string
        provider:
          type: array
          items:
            type: string
        startTime:
          type: string
          allOf:
            - $ref: "#/components/schemas/LocalDateTime"
          nullable: true
        endTime:
          type: string
          allOf:
            - $ref: "#/components/schemas/LocalDateTime"
          nullable: true
    WorkflowGetResponse:
      required:
        - metadata
        - status
      type: object
      properties:
        metadata:
          $ref: "#/components/schemas/WorkflowMetadata"
        status:
          $ref: "#/components/schemas/WorkflowStatus"
    WorkflowMetadata:
      required:
        - name
      type: object
      properties:
        name:
          type: string
    WorkflowRequest:
      required:
        - workflowDefinitionId
      type: object
      properties:
        workflowDefinitionId:
          type: string
    WorkflowStartResponse:
      required:
        - transactionId
        - workflowDefinitionId
        - workflowRunId
      type: object
      properties:
        transactionId:
          type: string
        workflowDefinitionId:
          type: string
        workflowRunId:
          type: string
    WorkflowStatus:
      required:
        - phase
        - startedAt
        - finishedAt
      type: object
      properties:
        phase:
          $ref: "#/components/schemas/WorkflowStatusPhase"
        startedAt:
          type: string
        finishedAt:
          type: string
    WorkflowStatusPhase:
      enum:
        - UNKNOWN
        - PENDING
        - RUNNING
        - SUCCEEDED
        - FAILED
        - ERROR
      type: string
    ZonedDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50-04:00
  securitySchemes:
    SecurityScheme:
      type: http
      description: Authentication
      scheme: bearer
      bearerFormat: JWT
