logging:
    level:
        root: ${LOG_LEVEL}
spring:
    application:
        name: datenmodellbackend
    main:
        web-application-type: servlet
    datasource:
        url: ${DB_URL}
        username: ${PG_USER}
        password: ${PG_PASSWORD}
    jpa:
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
    security:
        oauth2:
            client:
                registration:
                    eurodat:
                        client-id: ${CLIENT_ID}
                        client-authentication-method: private_key_jwt
                        authorization-grant-type: client_credentials
                        scope: openid
                        provider: eurodat
                provider:
                    eurodat:
                        issuer-uri: https://app.int.eurodat.org/auth/realms/eurodat-int # most important if you provide issuer-uri then all the configuration will be automatically handled
            resourceserver:
                jwt:
                    issuer-uri: http://localhost:20010/realms/dateninstitut
                    jwk-set-uri: http://datenmodell-keycloak:8080/realms/dateninstitut/protocol/openid-connect/certs
jks:
    base-path: https://app.int.eurodat.org/
    file-path: src/main/resources/keystore.jks
    certificate-alias: certificate
    password: ${JKS_PWD}
keycloak:
    client: datenmodell-frontend
server:
    servlet:
        context-path: /api
image-repository:
    user-id: ${IMAGE_REPO_USER}
    password: ${IMAGE_REPO_PWD}
